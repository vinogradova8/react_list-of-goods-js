{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGTH","SORT_BY_ALPHABET","App","useState","reverseParameter","setReverseParameter","sortParameter","setSortParameter","visibleGoods","goods","copyGoods","reverse","sort","good1","good2","length","localeCompare","getSortedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,SACjBC,EAAmB,WAmClB,IAAMC,EAAM,WACjB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EArCR,SAAwBC,EAAOH,EAAeF,GAC5C,IAAMM,EAAS,YAAOD,GA6BtB,OA3ByB,IAArBL,GACFM,EAAUC,UAGRL,GACFI,EAAUE,MAAK,SAACC,EAAOC,GACrB,OAAQR,GACN,KAAKN,EACH,OAAII,EACKU,EAAMC,OAASF,EAAME,OAGvBF,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EACH,OAAIG,EACKU,EAAME,cAAcH,GAGtBA,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKRJ,EAQHO,CAAelB,EAAiBO,EAAeF,GAiBnD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAiB,aAChCa,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYf,IAAkBL,IAJlC,iCAUA,wBACEkB,QAAS,kBAAMZ,EAAiB,WAChCa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYf,IAAkBN,IAJlC,4BAUA,wBACEmB,QAlCQ,WACVf,GACFC,EAAoB,IAGjBD,GACHC,EAAoB,IA6BhBe,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAiC,KAArBjB,IAJhB,sBAUEE,GAAiBF,IACjB,mCACE,wBACEe,QAnDE,WACZZ,EAAiB,IACjBF,EAAoB,KAkDVe,KAAK,SACLF,UAAU,4BAHZ,wBAWN,6BAEGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAGGA,aC9HbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5591fbbe.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_ALPHABET = 'alphabet';\n\nfunction getSortedGoods(goods, sortParameter, reverseParameter) {\n  const copyGoods = [...goods];\n\n  if (reverseParameter === 1) {\n    copyGoods.reverse();\n  }\n\n  if (sortParameter) {\n    copyGoods.sort((good1, good2) => {\n      switch (sortParameter) {\n        case SORT_BY_LENGTH:\n          if (reverseParameter) {\n            return good2.length - good1.length;\n          }\n\n          return good1.length - good2.length;\n\n        case SORT_BY_ALPHABET:\n          if (reverseParameter) {\n            return good2.localeCompare(good1);\n          }\n\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return copyGoods;\n}\n\nexport const App = () => {\n  const [reverseParameter, setReverseParameter] = useState('');\n  const [sortParameter, setSortParameter] = useState('');\n\n  const visibleGoods\n    = getSortedGoods(goodsFromServer, sortParameter, reverseParameter);\n\n  const reset = () => {\n    setSortParameter('');\n    setReverseParameter('');\n  };\n\n  const reverse = () => {\n    if (reverseParameter) {\n      setReverseParameter('');\n    }\n\n    if (!reverseParameter) {\n      setReverseParameter(1);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortParameter('alphabet')}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortParameter !== SORT_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortParameter('length')}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortParameter !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': reverseParameter === '',\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortParameter || reverseParameter) && (\n          <>\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n\n      <ul>\n\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}